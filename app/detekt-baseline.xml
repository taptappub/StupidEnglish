<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>DestructuringDeclarationWithTooManyEntries:AddSentenceScreen.kt$val (sentenceRef, wordsRef, buttonRef, hintRef) = createRefs()</ID>
    <ID>EmptyClassBlock:MultiFloatingActionButton.kt$MultiFloatingActionButton${ }</ID>
    <ID>EmptyFunctionBlock:CardStackAdapter.kt$CardStackAdapter.&lt;no name provided&gt;${}</ID>
    <ID>EmptyFunctionBlock:MainActivity.kt${ }</ID>
    <ID>EmptyFunctionBlock:StackScreen.kt$&lt;no name provided&gt;${ }</ID>
    <ID>LongMethod:AddSentenceScreen.kt$@Composable private fun ContentScreen( state: AddSentenceContract.State, sentence: String, onSentenceChanged: (sentence: String) -&gt; Unit, onEventSent: (event: AddSentenceContract.Event) -&gt; Unit )</ID>
    <ID>LongMethod:AddWordScreen.kt$@Composable private fun ContentScreen( word: String, onWordChanged: (word: String) -&gt; Unit, description: String, onDescriptionChanged: (description: String) -&gt; Unit, state: AddWordContract.State, onEventSent: (event: AddWordContract.Event) -&gt; Unit )</ID>
    <ID>LongMethod:AddWordScreen.kt$@Composable private fun HasDescriptionScreen( word: String, description: String, groups: List&lt;GroupListItemsModel&gt;, selectedGroups: List&lt;GroupListItemsModel&gt;, onEventSent: (event: AddWordContract.Event) -&gt; Unit, modifier: Modifier )</ID>
    <ID>LongMethod:AddWordScreen.kt$@OptIn(ExperimentalComposeUiApi::class) @ExperimentalMaterialApi @Composable fun AddWordScreen( context: Context, state: AddWordContract.State, word: String, onWordChanged: (word: String) -&gt; Unit, description: String, onDescriptionChanged: (description: String) -&gt; Unit, group: String, onGroupChange: (newGroup: String) -&gt; Unit, effectFlow: Flow&lt;AddWordContract.Effect&gt;?, onEventSent: (event: AddWordContract.Event) -&gt; Unit, onNavigationRequested: (navigationEffect: AddWordContract.Effect.Navigation) -&gt; Unit )</ID>
    <ID>LongMethod:AddWordViewModel.kt$AddWordViewModel$override suspend fun handleEvents(event: AddWordContract.Event)</ID>
    <ID>LongMethod:AuthScreen.kt$@Composable private fun ContentScreen( state: AuthContract.State, onEventSent: (event: AuthContract.Event) -&gt; Unit )</ID>
    <ID>LongMethod:GroupDetailsScreen.kt$@ExperimentalMaterialApi @ExperimentalFoundationApi @Composable fun MainList( groupItems: List&lt;GroupDetailsUIModel&gt;, deletedWords: List&lt;WordWithGroups&gt;, listState: LazyListState, isWordPagerEnabled: Boolean, onEventSent: (event: Event) -&gt; Unit )</ID>
    <ID>LongMethod:GroupListScreen.kt$@ExperimentalMaterialApi @Composable private fun GroupItemRow( item: GroupListItemsModel, onClicked: () -&gt; Unit, dismissState: DismissState, onShareClicked: (GroupListItemsModel) -&gt; Unit, modifier: Modifier )</ID>
    <ID>LongMethod:ImportWordsScreen.kt$@Composable private fun ImportWordStateScreen( state: ImportWordsContract.State, link: String, onLinkChange: (newUrl: String) -&gt; Unit, modifier: Modifier, onEventSent: (event: ImportWordsContract.Event) -&gt; Unit )</ID>
    <ID>LongMethod:ImportWordsScreen.kt$@OptIn(ExperimentalMaterialApi::class, ExperimentalComposeUiApi::class) @Composable fun ImportWordsScreen( context: Context, state: ImportWordsContract.State, link: String, onLinkChange: (newUrl: String) -&gt; Unit, group: String, onGroupChange: (newGroup: String) -&gt; Unit, effectFlow: Flow&lt;ImportWordsContract.Effect&gt;?, onEventSent: (event: ImportWordsContract.Event) -&gt; Unit, onNavigationRequested: (navigationEffect: ImportWordsContract.Effect.Navigation) -&gt; Unit )</ID>
    <ID>LongMethod:MainActivity.kt$MainActivity$@ExperimentalMaterialApi @OptIn( ExperimentalFoundationApi::class ) @ExperimentalAnimationApi @ExperimentalMaterialNavigationApi @Composable private fun StupidApp()</ID>
    <ID>LongMethod:ProfileScreen.kt$@Composable fun MenuScreen( state: ProfileContract.State, onEventSent: (event: ProfileContract.Event) -&gt; Unit )</ID>
    <ID>LongMethod:SentencesListScreen.kt$@ExperimentalMaterialApi @Composable private fun SentenceItemRow( item: SentencesListItemUI, onClicked: () -&gt; Unit, dismissState: DismissState, onShareClicked: (SentencesListItemUI) -&gt; Unit, modifier: Modifier )</ID>
    <ID>LongMethod:SentencesListScreen.kt$@OptIn(ExperimentalComposeUiApi::class) @ExperimentalFoundationApi @ExperimentalMaterialApi @Composable fun SentencesListScreen( context: Context, state: SentencesListContract.State, effectFlow: Flow&lt;SentencesListContract.Effect&gt;?, onEventSent: (event: SentencesListContract.Event) -&gt; Unit, onChangeBottomSheetVisibility: (visibility: Boolean) -&gt; Unit, onNavigationRequested: (navigationEffect: SentencesListContract.Effect.Navigation) -&gt; Unit )</ID>
    <ID>LongMethod:SentencesListViewModel.kt$SentencesListViewModel$override suspend fun handleEvents(event: SentencesListContract.Event)</ID>
    <ID>LongMethod:SplashScreen.kt$@ExperimentalFoundationApi @Composable private fun ContentScreen( state: SplashContract.State, onEventSent: (event: SplashContract.Event) -&gt; Unit )</ID>
    <ID>LongMethod:WordListScreen.kt$@ExperimentalFoundationApi @ExperimentalMaterialApi @Composable private fun MainList( group: GroupListItemsModel?, listState: LazyListState, onEventSent: (event: WordListContract.Event) -&gt; Unit, deletedWords: List&lt;WordWithGroups&gt;, wordViewModel: WordListViewModel )</ID>
    <ID>LongMethod:WordListScreen.kt$@OptIn(ExperimentalComposeUiApi::class) @ExperimentalFoundationApi @ExperimentalMaterialApi @Composable fun WordListScreen( context: Context, state: WordListContract.State, group: String, currentGroup: GroupListItemsModel?, onGroupChange: (newGroup: String) -&gt; Unit, effectFlow: Flow&lt;WordListContract.Effect&gt;?, onEventSent: (event: WordListContract.Event) -&gt; Unit, onChangeBottomSheetVisibility: (visibility: Boolean) -&gt; Unit, onNavigationRequested: (navigationEffect: WordListContract.Effect.Navigation) -&gt; Unit, wordViewModel: WordListViewModel, )</ID>
    <ID>LongMethod:WordListViewModel.kt$WordListViewModel$@Suppress override suspend fun handleEvents(event: WordListContract.Event)</ID>
    <ID>LongParameterList:IWriteUserDataSource.kt$IWriteUserDataSource$( name: String, image: String, email: String, emailVerified: Boolean?, phoneNumber: String?, uid: String )</ID>
    <ID>LongParameterList:WordListRepository.kt$WordListRepository$( readGroupsDataSource: IReadGroupsDataSource, writeGroupsDataSource: IWriteGroupsDataSource, readUserDataSource: IReadUserDataSource, readWordsDataSource: IReadWordsDataSource, readGroupWithWordsDataSource: IReadGroupWithWordsDataSource, writeWordsDataSource: IWriteWordsDataSource, private val settings: Settings )</ID>
    <ID>MagicNumber:AlarmReceiver.kt$AlarmReceiver$231</ID>
    <ID>MagicNumber:AlarmScheduler.kt$AlarmScheduler$1000</ID>
    <ID>MagicNumber:AlarmScheduler.kt$AlarmScheduler$12</ID>
    <ID>MagicNumber:AuthScreen.kt$0xffff0000</ID>
    <ID>MagicNumber:AuthScreen.kt$52</ID>
    <ID>MagicNumber:AuthScreen.kt$760</ID>
    <ID>MagicNumber:CardStackAdapter.kt$CardStackAdapter$500</ID>
    <ID>MagicNumber:CardStackUIUtils.kt$3</ID>
    <ID>MagicNumber:CardStackUIUtils.kt$4</ID>
    <ID>MagicNumber:GroupDetailsScreen.kt$4</ID>
    <ID>MagicNumber:GroupDetailsUiModels.kt$GroupDetailsDynamicTitleUI$3</ID>
    <ID>MagicNumber:GroupDetailsUiModels.kt$GroupDetailsEmptyUI$2</ID>
    <ID>MagicNumber:GroupListScreen.kt$0.5f</ID>
    <ID>MagicNumber:GroupListScreen.kt$0.80f</ID>
    <ID>MagicNumber:GroupsStackRow.kt$14</ID>
    <ID>MagicNumber:GroupsStackRow.kt$5</ID>
    <ID>MagicNumber:ImportWordsRepository.kt$3</ID>
    <ID>MagicNumber:ImportWordsViewModel.kt$ImportWordsViewModel$2000</ID>
    <ID>MagicNumber:ImportWordsViewModel.kt$ImportWordsViewModel$700</ID>
    <ID>MagicNumber:SentencesListScreen.kt$0.5f</ID>
    <ID>MagicNumber:SentencesListScreen.kt$0.80f</ID>
    <ID>MagicNumber:SentencesListUiModels.kt$SentencesListEmptyUI$2</ID>
    <ID>MagicNumber:SentencesListViewModel.kt$SentencesListViewModel$3</ID>
    <ID>MagicNumber:SplashScreen.kt$0.2f</ID>
    <ID>MagicNumber:StackScreen.kt$0.3f</ID>
    <ID>MagicNumber:StackScreen.kt$0.8f</ID>
    <ID>MagicNumber:StackScreen.kt$16.0f</ID>
    <ID>MagicNumber:StackScreen.kt$20.0f</ID>
    <ID>MagicNumber:StackScreen.kt$3</ID>
    <ID>MagicNumber:StupidApiProvider.kt$StupidApiProvider$28</ID>
    <ID>MagicNumber:ViewModel.kt$3</ID>
    <ID>MagicNumber:ViewModel.kt$4</ID>
    <ID>MagicNumber:ViewModel.kt$5</ID>
    <ID>MagicNumber:WordListUiModels.kt$OnboardingWordUI$2</ID>
    <ID>MagicNumber:WordListUiModels.kt$WordListDynamicTitleUI$5</ID>
    <ID>MagicNumber:WordListUiModels.kt$WordListEmptyUI$4</ID>
    <ID>MagicNumber:WordListUiModels.kt$WordListGroupUI$3</ID>
    <ID>MatchingDeclarationName:MenuBottomSheet.kt$MenuItem</ID>
    <ID>MaxLineLength:ImportWordsTutorialViewModel.kt$ImportWordsTutorialViewModel$class</ID>
    <ID>MaxLineLength:MainActivity.kt$//1) Обложить все аналитикой, чтобы смотреть, куда нажимает пользователь (1) Катя не поняла, что внизу табы, 2) нажимала на слово, чтобы сделать предложение, 3) нажимала на слова в ADD_SENTENCE</ID>
    <ID>MaxLineLength:MainActivity.kt$//11) ЗАменить икони из https://fonts.google.com/icons?icon.style=Sharp&amp;icon.set=Material+Icons&amp;icon.platform=android&amp;selected=Material+Icons+Sharp:school:&amp;icon.query=learning (не забудь про меню из лонгклика)</ID>
    <ID>NewLineAtEndOfFile:AddSentenceArgumentsMapper.kt$io.taptap.stupidenglish.features.addsentence.navigation.AddSentenceArgumentsMapper.kt</ID>
    <ID>NewLineAtEndOfFile:AddSentenceContract.kt$io.taptap.stupidenglish.features.addsentence.ui.AddSentenceContract.kt</ID>
    <ID>NewLineAtEndOfFile:AddWordContract.kt$io.taptap.stupidenglish.features.addword.ui.AddWordContract.kt</ID>
    <ID>NewLineAtEndOfFile:AddWordRepository.kt$io.taptap.stupidenglish.features.addword.data.AddWordRepository.kt</ID>
    <ID>NewLineAtEndOfFile:AlarmRepository.kt$io.taptap.stupidenglish.features.alarm.data.AlarmRepository.kt</ID>
    <ID>NewLineAtEndOfFile:ArchiveMainActivity.kt$io.taptap.stupidenglish.archive.ArchiveMainActivity.kt</ID>
    <ID>NewLineAtEndOfFile:AuthScreen.kt$io.taptap.stupidenglish.features.auth.ui.AuthScreen.kt</ID>
    <ID>NewLineAtEndOfFile:AuthViewModel.kt$io.taptap.stupidenglish.features.auth.ui.AuthViewModel.kt</ID>
    <ID>NewLineAtEndOfFile:BootReceiver.kt$io.taptap.stupidenglish.features.alarm.ui.BootReceiver.kt</ID>
    <ID>NewLineAtEndOfFile:CardStackUIUtils.kt$io.taptap.stupidenglish.features.stack.ui.adapter.CardStackUIUtils.kt</ID>
    <ID>NewLineAtEndOfFile:Contract.kt$io.taptap.stupidenglish.archive.menu.Contract.kt</ID>
    <ID>NewLineAtEndOfFile:DataSourcesProvider.kt$io.taptap.stupidenglish.di.DataSourcesProvider.kt</ID>
    <ID>NewLineAtEndOfFile:EntityMappers.kt$io.taptap.stupidenglish.base.logic.mapper.EntityMappers.kt</ID>
    <ID>NewLineAtEndOfFile:GoogleSheetApiProvider.kt$io.taptap.stupidenglish.di.GoogleSheetApiProvider.kt</ID>
    <ID>NewLineAtEndOfFile:GroupDetailsRepository.kt$io.taptap.stupidenglish.features.groupdetails.data.GroupDetailsRepository.kt</ID>
    <ID>NewLineAtEndOfFile:GroupDetailsViewModel.kt$io.taptap.stupidenglish.features.groupdetails.ui.GroupDetailsViewModel.kt</ID>
    <ID>NewLineAtEndOfFile:GroupListRepository.kt$io.taptap.stupidenglish.features.groups.data.GroupListRepository.kt</ID>
    <ID>NewLineAtEndOfFile:GroupListScreen.kt$io.taptap.stupidenglish.features.groups.ui.GroupListScreen.kt</ID>
    <ID>NewLineAtEndOfFile:GroupWithWordsDto.kt$io.taptap.stupidenglish.base.logic.database.dto.GroupWithWordsDto.kt</ID>
    <ID>NewLineAtEndOfFile:GroupsStackRow.kt$io.taptap.stupidenglish.archive.ui.GroupsStackRow.kt</ID>
    <ID>NewLineAtEndOfFile:IKeysDataSource.kt$io.taptap.stupidenglish.base.logic.sources.keys.IKeysDataSource.kt</ID>
    <ID>NewLineAtEndOfFile:IReadGroupWithWordsDataSource.kt$io.taptap.stupidenglish.base.logic.sources.groupwithwords.read.IReadGroupWithWordsDataSource.kt</ID>
    <ID>NewLineAtEndOfFile:IReadWordsDataSource.kt$io.taptap.stupidenglish.base.logic.sources.words.read.IReadWordsDataSource.kt</ID>
    <ID>NewLineAtEndOfFile:IWriteWordsDataSource.kt$io.taptap.stupidenglish.base.logic.sources.words.write.IWriteWordsDataSource.kt</ID>
    <ID>NewLineAtEndOfFile:ImportWordsContract.kt$io.taptap.stupidenglish.features.importwords.ui.ImportWordsContract.kt</ID>
    <ID>NewLineAtEndOfFile:ImportWordsInteractor.kt$io.taptap.stupidenglish.features.importwords.domain.ImportWordsInteractor.kt</ID>
    <ID>NewLineAtEndOfFile:ImportWordsTutorialContract.kt$io.taptap.stupidenglish.features.importwordstutorial.ui.ImportWordsTutorialContract.kt</ID>
    <ID>NewLineAtEndOfFile:MainActivity.kt$io.taptap.stupidenglish.MainActivity.kt</ID>
    <ID>NewLineAtEndOfFile:MainContract.kt$io.taptap.stupidenglish.features.main.ui.MainContract.kt</ID>
    <ID>NewLineAtEndOfFile:MainViewModel.kt$io.taptap.stupidenglish.features.main.ui.MainViewModel.kt</ID>
    <ID>NewLineAtEndOfFile:MenuBottomSheet.kt$io.taptap.stupidenglish.ui.MenuBottomSheet.kt</ID>
    <ID>NewLineAtEndOfFile:MultiFloatingActionButton.kt$io.taptap.stupidenglish.archive.ui.MultiFloatingActionButton.kt</ID>
    <ID>NewLineAtEndOfFile:ProfileContract.kt$io.taptap.stupidenglish.features.profile.ui.ProfileContract.kt</ID>
    <ID>NewLineAtEndOfFile:ProfileViewModel.kt$io.taptap.stupidenglish.features.profile.ui.ProfileViewModel.kt</ID>
    <ID>NewLineAtEndOfFile:Screen.kt$io.taptap.stupidenglish.archive.menu.Screen.kt</ID>
    <ID>NewLineAtEndOfFile:SentencesListContract.kt$io.taptap.stupidenglish.archive.features.sentences.ui.SentencesListContract.kt</ID>
    <ID>NewLineAtEndOfFile:SplashContract.kt$io.taptap.stupidenglish.features.splash.ui.SplashContract.kt</ID>
    <ID>NewLineAtEndOfFile:SplashRepository.kt$io.taptap.stupidenglish.features.splash.data.SplashRepository.kt</ID>
    <ID>NewLineAtEndOfFile:StackContract.kt$io.taptap.stupidenglish.features.stack.ui.StackContract.kt</ID>
    <ID>NewLineAtEndOfFile:StupidApiProvider.kt$io.taptap.stupidenglish.di.StupidApiProvider.kt</ID>
    <ID>NewLineAtEndOfFile:StupidEnglishBottomBar.kt$io.taptap.stupidenglish.ui.StupidEnglishBottomBar.kt</ID>
    <ID>NewLineAtEndOfFile:TermsContract.kt$io.taptap.stupidenglish.features.termsandconditions.ui.TermsContract.kt</ID>
    <ID>NewLineAtEndOfFile:TermsScreen.kt$io.taptap.stupidenglish.features.termsandconditions.ui.TermsScreen.kt</ID>
    <ID>NewLineAtEndOfFile:ViewModel.kt$io.taptap.stupidenglish.archive.menu.ViewModel.kt</ID>
    <ID>NewLineAtEndOfFile:WordListUiModels.kt$io.taptap.stupidenglish.features.words.ui.model.WordListUiModels.kt</ID>
    <ID>NewLineAtEndOfFile:WordWithGroups.kt$io.taptap.stupidenglish.base.model.WordWithGroups.kt</ID>
    <ID>NewLineAtEndOfFile:WordWithGroupsDto.kt$io.taptap.stupidenglish.base.logic.database.dto.WordWithGroupsDto.kt</ID>
    <ID>NewLineAtEndOfFile:WriteWordsDataSource.kt$io.taptap.stupidenglish.base.logic.sources.words.write.WriteWordsDataSource.kt</ID>
    <ID>PrintStackTrace:MainActivity.kt$e</ID>
    <ID>ReturnCount:AuthViewModel.kt$AuthViewModel$private suspend fun signIn(selectedEmail: String?)</ID>
    <ID>ReturnCount:ProfileViewModel.kt$ProfileViewModel$private suspend fun signIn(selectedEmail: String?)</ID>
    <ID>TooGenericExceptionCaught:MainActivity.kt$e: Exception</ID>
    <ID>TooManyFunctions:MainActivity.kt$io.taptap.stupidenglish.MainActivity.kt</ID>
    <ID>TooManyFunctions:WordDao.kt$WordDao</ID>
    <ID>UnusedPrivateMember:ArchiveMainActivity.kt$@ExperimentalMaterialApi @OptIn( ExperimentalFoundationApi::class ) @ExperimentalAnimationApi @ExperimentalMaterialNavigationApi @Composable private fun StupidApp()</ID>
    <ID>UnusedPrivateMember:AuthScreen.kt$@Preview(showBackground = true) @Composable private fun AuthScreenPreview()</ID>
    <ID>WildcardImport:AlarmReceiver.kt$import kotlinx.coroutines.*</ID>
    <ID>WildcardImport:GroupDetailsScreen.kt$import io.taptap.stupidenglish.features.groupdetails.ui.GroupDetailsContract.*</ID>
    <ID>WildcardImport:SentencesListScreen.kt$import io.taptap.uikit.*</ID>
  </CurrentIssues>
</SmellBaseline>
